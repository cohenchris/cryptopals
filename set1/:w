#!/bin/python

# https://cryptopals.com/sets/1/challenges/6

MAXKEYSIZE = 40

def ascii_to_binary(string):
    binary_str = ""
    for char in string:
        binary_str = binary_str + bin(ord(char))[2:].zfill(8)

    return binary_str



def compute_hamming_distance(str1, str2):
    assert len(str1) == len(str2)

    # Convert each string to binary
    s1 = ascii_to_binary(str1)
    s2 = ascii_to_binary(str2)

    hamming = 0
    [hamming := hamming + 1 for i in range(len(s1)) if s1[i] != s2[i]]

    return hamming



def find_key(content):
    key = 2
    for i in range(2, MAXKEYSIZE):
        KEYSIZE = i
        first_n_bytes = content[:KEYSIZE]
        second_n_bytes = content[KEYSIZE:KEYSIZE*2]

        diff =

    return key



def break_repeating_key_xor(filename):
    content = ""
    with open(filename, "r") as f:
        content = f.read()

    key = find_key(content)




str1 = "this is a test"
str2 = "wokka wokka!!!"
if __name__ == "__main__":
    break_repeating_key_xor("6.txt")
